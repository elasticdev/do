#!/usr/bin/env python

import os
#import json
#import sys
from time import sleep
import digitalocean

do_token = os.environ.get("DO_TOKEN")
if not do_token: do_token = os.environ["DIGITALOCEAN_TOKEN"]

# Creating a Droplet and checking its status
name = os.environ["NAME"]
region = os.environ.get("DO_DEFAULT_REGION","nyc3")
image = os.environ.get("IMAGE","53263886")
size = os.environ.get("DROPLET_SIZE","s-1vcpu-1gb")
backup = os.environ.get("BACKUP")
private_networking = os.environ.get("PRIVATE_NETWORKING",True)
monitoring = os.environ.get("MONITORING",True)
key_id = os.environ.get("KEY_ID")

inputargs = { "token":do_token,
              "name":name,
              "region":region,
              "image":image,
              "size_slug":size }

if private_networking: inputargs["private_networking"] = True
if monitoring: inputargs["monitoring"] = True
if key_id: inputargs["ssh_keys"] = key_id
if backup: inputargs["backups"] = True

#'destroy',
#'id',
#'image',
#'ip_address',
#'name',
#'networks',
#'private_ip_address',
#'region',
#'size',
#'size_slug',
#'snapshot_ids',

manager = digitalocean.Manager(token=do_token)
my_droplets = manager.get_all_droplets()

for droplet in my_droplets:
    if droplet.name != name: continue
    print ''
    print ''
    print 'name "{}"'.format(droplet.name)
    print 'public_ip "{}"'.format(droplet.ip_address)
    print 'private_ip "{}"'.format(droplet.private_ip_address)
    print 'region "{}"'.format(droplet.region)
    print ''
    print ''

droplet = digitalocean.Droplet(**inputargs)
droplet.create()

actions = droplet.get_actions()

for action in actions:
    while True:
        sleep(1)
        action.load()
        # Once it shows complete, droplet is up and running
        print action.status
        if action.status != "completed": continue
        if private_networking:
            print droplet.private_ip_address
            if not droplet.private_ip_address: continue
        print droplet.name
        print droplet.ip_address
        print droplet.private_ip_address
        print droplet.region
        break
